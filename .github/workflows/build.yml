name: Build

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  Windows-Msvc-Build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3

    - name: Update Git submodules
      run: git submodule update --init --recursive

    - uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: 'x64'

    - name: Configure CMake
      run: cmake -B D:\a\Eat-the-Mushroom\Eat-the-Mushroom/build -DCMAKE_BUILD_TYPE=Release -DCMAKE_IGNORE_PATH=C:\ProgramData\chocolatey\bin -DBUILD_SHARED_LIBS=FALSE -G "Ninja"

    - name: Build
      run: |
        cd build
        cmake --build D:\a\Eat-the-Mushroom\Eat-the-Mushroom/build --config Release
      
    - name: Test
      run: |
        echo "Test Coming Soon..."

    - name: Create Artifact
      uses: actions/upload-artifact@v2
      with:
        name: Windows-Msvc
        path: ${{github.workspace}}/build/bin
  Linux-Build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Update Git submodules
        run: git submodule update --init --recursive

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y g++ clang libc++-dev libc++abi-dev cmake ninja-build libx11-dev libxcursor-dev libxi-dev libgl1-mesa-dev libfontconfig1-dev libxrandr-dev libxinerama-dev libgtk-3-dev

      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DBUILD_SHARED_LIBS=FALSE -G "Ninja" 

      - name: Build
        run: |
          cd build 
          cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Test
        run: |
          echo "Test Coming Soon..."

      - name: Create Artifact
        uses: actions/upload-artifact@v2
        with:
          name: Linux
          path: ${{github.workspace}}/build/bin
  Macos-x86_64-Build:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v3

      - name: Update Git submodules
        run: git submodule update --init --recursive

      - name: Install Ninja
        run: brew install ninja

      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DBUILD_SHARED_LIBS=FALSE -G "Ninja" -DCMAKE_OSX_ARCHITECTURES=x86_64 -DCMAKE_OSX_DEPLOYMENT_TARGET=10.15 -DCMAKE_OSX_SYSROOT=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk

      - name: Build
        run: |
          cd build
          cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Test
        run: |
          echo "Test Coming Soon..."

      - name: Create Artifact
        uses: actions/upload-artifact@v2
        with:
          name: Macos-x86_64
          path: ${{github.workspace}}/build/bin
  Macos-Arm64-Build:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v3

      - name: Update Git submodules
        run: git submodule update --init --recursive

      - name: Install Ninja
        run: brew install ninja

      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DBUILD_SHARED_LIBS=FALSE -G "Ninja" -DCMAKE_OSX_ARCHITECTURES=arm64 -DCMAKE_OSX_DEPLOYMENT_TARGET=10.15 -DCMAKE_OSX_SYSROOT=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk

      - name: Build
        run: |
          cd build
          cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Test
        run: |
          echo "Test Coming Soon..."

      - name: Create Artifact
        uses: actions/upload-artifact@v2
        with:
          name: Macos-Arm64
          path: ${{github.workspace}}/build/bin
